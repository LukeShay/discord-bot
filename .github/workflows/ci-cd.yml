name: Actions
on: [ push ]

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: library/postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11.0.10
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: ./gradlew build -Dapp.version=${{ github.sha }} -Ddatabase.url=${{ env.DATABASE_URL }} -Denvironment=${{ env.ENVIRONMENT }} -Dakeyless.access.id=${{ secrets.AKEYLESS_ACCESS_ID }} -Dakeyless.access.key=${{ secrets.AKEYLESS_ACCESS_KEY }}
        env:
          DATABASE_URL: postgres://postgres:password@localhost:${{ job.services.postgres.ports[5432] }}/postgres
          ENVIRONMENT: development
      - if: always()
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  docker:
    runs-on: ubuntu-20.04
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          registry: https://docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: docker.pkg.github.com/lukeshay/jeffery-krueger/jeffery-krueger:${{ github.sha }}
          build-args: |
            SHA=${{ github.sha }}
      - run: echo ${{ steps.docker_build.outputs.digest }}
  deploy-dev:
    if: github.ref == 'refs/heads/master'
    needs: [ build, docker ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11.0.10
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: ./gradlew shadowJar deployHeroku --stacktrace -Dapp.version=${{ github.sha }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - if: success()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          color: "#00FF00"
          args: "Deployed ${{ github.sha }} to jeffery-krueger-dev"
      - if: failure()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          color: "#FF0000"
          args: "Failed to deploy ${{ github.sha }} to jeffery-krueger-dev"